# A city to be used on the map
type City {
  _id: Int!
  lat: Float
  lng: Float
  todo(first: Int, after: String, last: Int, before: String): ToDoConnection
}

# Mutations for the To Do List
type Mutation {
  createToDo(input: ToDoInput): ToDo
}

# An array of Cities
type Query {
  cities: [City]
  city(cityID: Int!): City
}

# A To Do for a city
type ToDo {
  city_id: Int!
  text: String
  likes: Int
  _id: Int!
}

# To Do Connection
type ToDoConnection {
  edges: [ToDoEdge]
  pageInfo: ToDoPageInfo
}

# To Do Edge
type ToDoEdge {
  node: ToDo
  cursor: String!
}

input ToDoInput {
  city_id: Int!
  text: String
}

# ToDo Page Info
type ToDoPageInfo {
  hasPreviousPage(first: Int, after: String, last: Int, before: String): Boolean!
  hasNextPage(first: Int, after: String, last: Int, before: String): Boolean!
  startCursor: String!
  endCursor: String!
}
